OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader tissuePatternCircles
param	float	s	0		%meta{int,lockgeom,0}  %read{1,19} %write{2147483647,-1}
param	float	t	0		%meta{int,lockgeom,0}  %read{7,31} %write{2147483647,-1}
param	float	s_repeats	8		%read{1,1} %write{2147483647,-1}
param	float	t_repeats	3		%read{7,7} %write{2147483647,-1}
param	float	innerRadius	0		%read{119,119} %write{2147483647,-1}
param	float	outerRadius	0.0099999998		%read{0,116} %write{2147483647,-1}
param	int	ringsPerCircle	3		%read{48,48} %write{2147483647,-1}
param	point	circlesPerRing	18 9 0		%read{49,56} %write{2147483647,-1}
param	float	distanceBetweenRows	0		%read{48,127} %write{0,0} %initexpr
param	float	height	0.0049999999		%read{17,17} %write{2147483647,-1}
param	int	frequency	5		%read{14,14} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{13,13}
oparam	float	dispOut	0		%read{37,127} %write{17,127}
global	point	P	%read{15,15} %write{2147483647,-1}
local	vector	___252_axis	%read{48,127} %write{48,127}
local	float	___252_cosang	%read{48,127} %write{48,127}
local	float	___252_sinang	%read{48,127} %write{48,127}
local	float	___252_cosang1	%read{48,127} %write{48,127}
local	float	___252_x	%read{48,127} %write{48,127}
local	float	___252_y	%read{48,127} %write{48,127}
local	float	___252_z	%read{48,127} %write{48,127}
local	matrix	___252_M	%read{48,127} %write{48,127}
local	float	ss	%read{41,41} %write{6,6}
local	float	tt	%read{41,41} %write{12,12}
local	float	stipRepeats	%read{19,19} %write{18,18}
local	float	stipSS	%read{27,27} %write{24,24}
local	color	lineColour	%read{34,34} %write{25,29}
local	float	lineWidth	%read{27,27} %write{26,26}
local	float	waveLength	%read{31,31} %write{30,30}
local	color	wave	%read{34,35} %write{33,34}
local	float	s_centre	%read{42,44} %write{38,38}
local	float	t_centre	%read{42,128} %write{39,128}
local	float	circleSize	%read{44,44} %write{40,40}
local	point	stPoint	%read{48,127} %write{41,41}
local	point	rotPoint	%read{48,127} %write{48,127}
local	float	rotS	%read{48,127} %write{48,127}
local	float	rotT	%read{48,127} %write{48,127}
local	point	centrePoint	%read{48,127} %write{42,42}
local	point	axisPoint	%read{48,127} %write{43,43}
local	float	sOffset	%read{48,127} %write{44,127}
local	float	tOffset	%read{48,127} %write{45,45}
local	int	___325_i	%read{48,127} %write{47,127}
local	float	___326_angle	%read{48,127} %write{48,127}
local	int	___327_j	%read{48,127} %write{48,127}
local	float	___328_dist	%read{48,127} %write{48,127}
const	float	$const2	5		%read{0,0} %write{2147483647,-1}
temp	float	$tmp1	%read{3,6} %write{1,1}
const	int	$const3	1		%read{66,127} %write{2147483647,-1}
const	float	$const4	1		%read{3,107} %write{2147483647,-1}
const	string	$const5	"mod"		%read{2,20} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{9,12} %write{7,7}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
const	color	$const6	0.94999999 0.94999999 0.94999999		%read{13,29} %write{2147483647,-1}
temp	float	$tmp9	%read{17,17} %write{16,16}
const	string	$const7	"perlin"		%read{16,16} %write{2147483647,-1}
temp	point	$tmp10	%read{16,16} %write{15,15}
temp	point	$tmp11	%read{15,15} %write{14,14}
const	int	$const8	2		%read{18,67} %write{2147483647,-1}
temp	float	$tmp12	%read{21,24} %write{19,19}
temp	float	$tmp13	%read{23,23} %write{22,22}
temp	float	$tmp14	%read{22,22} %write{21,21}
temp	float	$tmp15	%read{24,24} %write{23,23}
const	color	$const9	0 0 0		%read{25,25} %write{2147483647,-1}
const	float	$const10	0.001		%read{26,26} %write{2147483647,-1}
temp	int	$tmp16	%read{28,28} %write{27,27}
const	float	$const11	3.141		%read{30,30} %write{2147483647,-1}
const	float	$const13	30		%read{30,30} %write{2147483647,-1}
temp	float	$tmp17	%read{33,33} %write{32,32}
temp	float	$tmp18	%read{32,32} %write{31,31}
const	int	$const14	0		%read{35,120} %write{2147483647,-1}
temp	float	$tmp19	%read{36,36} %write{35,35}
temp	float	$tmp20	%read{37,37} %write{36,36}
const	float	$const16	150		%read{36,36} %write{2147483647,-1}
const	float	$const17	0.5		%read{38,128} %write{2147483647,-1}
const	float	$const19	25		%read{40,40} %write{2147483647,-1}
const	float	$const20	0		%read{41,114} %write{2147483647,-1}
temp	int	$tmp21	%read{46,127} %write{47,127}
temp	float	$tmp22	%read{48,127} %write{48,127}
temp	float	$tmp23	%read{48,127} %write{48,127}
const	float	$const22	360		%read{50,50} %write{2147483647,-1}
const	string	$const23	"radians"		%read{51,51} %write{2147483647,-1}
const	float	$const24	3.1415927		%read{52,52} %write{2147483647,-1}
const	float	$const25	180		%read{52,52} %write{2147483647,-1}
temp	float	$tmp24	%read{48,127} %write{48,127}
temp	float	$tmp25	%read{48,127} %write{48,127}
temp	int	$tmp26	%read{48,127} %write{48,127}
temp	float	$tmp27	%read{48,127} %write{48,127}
temp	float	$tmp28	%read{48,127} %write{48,127}
const	string	$const26	"rotate"		%read{60,60} %write{2147483647,-1}
temp	vector	$tmp29	%read{48,127} %write{48,127}
temp	float	$tmp30	%read{48,127} %write{48,127}
temp	float	$tmp31	%read{48,127} %write{48,127}
temp	float	$tmp32	%read{48,127} %write{48,127}
temp	float	$tmp33	%read{48,127} %write{48,127}
temp	float	$tmp34	%read{48,127} %write{48,127}
temp	float	$tmp35	%read{48,127} %write{48,127}
temp	float	$tmp36	%read{48,127} %write{48,127}
temp	float	$tmp37	%read{48,127} %write{48,127}
temp	float	$tmp38	%read{48,127} %write{48,127}
temp	float	$tmp39	%read{48,127} %write{48,127}
temp	float	$tmp40	%read{48,127} %write{48,127}
temp	float	$tmp41	%read{48,127} %write{48,127}
temp	float	$tmp42	%read{48,127} %write{48,127}
temp	float	$tmp43	%read{48,127} %write{48,127}
temp	float	$tmp44	%read{48,127} %write{48,127}
temp	float	$tmp45	%read{48,127} %write{48,127}
temp	float	$tmp46	%read{48,127} %write{48,127}
temp	float	$tmp47	%read{48,127} %write{48,127}
temp	float	$tmp48	%read{48,127} %write{48,127}
temp	float	$tmp49	%read{48,127} %write{48,127}
temp	float	$tmp50	%read{48,127} %write{48,127}
temp	float	$tmp51	%read{48,127} %write{48,127}
temp	float	$tmp52	%read{48,127} %write{48,127}
temp	float	$tmp53	%read{48,127} %write{48,127}
temp	float	$tmp54	%read{48,127} %write{48,127}
temp	float	$tmp55	%read{48,127} %write{48,127}
temp	float	$tmp56	%read{48,127} %write{48,127}
temp	float	$tmp57	%read{48,127} %write{48,127}
temp	float	$tmp58	%read{48,127} %write{48,127}
temp	float	$tmp59	%read{48,127} %write{48,127}
temp	float	$tmp60	%read{48,127} %write{48,127}
temp	float	$tmp61	%read{48,127} %write{48,127}
temp	float	$tmp62	%read{48,127} %write{48,127}
temp	float	$tmp63	%read{48,127} %write{48,127}
temp	float	$tmp64	%read{48,127} %write{48,127}
temp	float	$tmp65	%read{48,127} %write{48,127}
temp	float	$tmp66	%read{48,127} %write{48,127}
temp	float	$tmp67	%read{48,127} %write{48,127}
temp	float	$tmp68	%read{48,127} %write{48,127}
temp	vector	$tmp69	%read{48,127} %write{48,127}
temp	vector	$tmp70	%read{48,127} %write{48,127}
temp	point	$tmp71	%read{48,127} %write{48,127}
temp	point	$tmp72	%read{48,127} %write{48,127}
temp	int	$tmp73	%read{48,127} %write{48,127}
temp	int	$tmp74	%read{48,127} %write{48,127}
temp	int	$tmp75	%read{48,127} %write{48,127}
temp	int	$tmp76	%read{48,127} %write{48,127}
temp	float	$tmp77	%read{48,127} %write{48,127}
const	float	$const27	2		%read{123,123} %write{2147483647,-1}
code distanceBetweenRows
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:17
# 
	mul		distanceBetweenRows outerRadius $const2 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{17} %argrw{"wrr"}
code ___main___
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:27
#     float tt = mod(t * t_repeats, 1);   
	mul		$tmp1 s s_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{27} %argrw{"wrr"}
	functioncall	$const5 7 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# PERCOMP1 (log2)
	div		$tmp3 $tmp1 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const4 $tmp2 	%argrw{"wrr"}
	sub		ss $tmp1 $tmp4 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:28
# 
	mul		$tmp5 t t_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{28} %argrw{"wrr"}
	functioncall	$const5 13 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# float  log (float a,  float b) { return log(a)/log(b); }
	div		$tmp7 $tmp5 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const4 $tmp6 	%argrw{"wrr"}
	sub		tt $tmp5 $tmp8 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:31
#     dispOut = height * (float)noise("perlin", P * frequency);
	assign		resultRGB $const6 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{31} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:32
# 
	assign		$tmp11 frequency 	%line{32} %argrw{"wr"}
	mul		$tmp10 P $tmp11 	%argrw{"wrr"}
	noise		$tmp9 $const7 $tmp10 	%argrw{"wrr"}
	mul		dispOut height $tmp9 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:35
#     float stipSS = mod(s * stipRepeats, 1);
	assign		stipRepeats $const8 	%line{35} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:36
# 
	mul		$tmp12 s stipRepeats 	%line{36} %argrw{"wrr"}
	functioncall	$const5 25 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# PERCOMP2 (pow)
	div		$tmp14 $tmp12 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp13 $tmp14 	%argrw{"wr"}
	mul		$tmp15 $const4 $tmp13 	%argrw{"wrr"}
	sub		stipSS $tmp12 $tmp15 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:38
#     float lineWidth = 0.001;
	assign		lineColour $const9 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{38} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:39
#     
	assign		lineWidth $const10 	%line{39} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:42
#     {
	lt		$tmp16 stipSS lineWidth 	%line{42} %argrw{"wrr"}
	if		$tmp16 30 30 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:44
#     }
	assign		lineColour $const6 	%line{44} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:48
#     color wave = color(sin(waveLength * t));
	mul		waveLength $const11 $const13 	%line{48} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:49
#     wave *= lineColour;
	mul		$tmp18 waveLength t 	%line{49} %argrw{"wrr"}
	sin		$tmp17 $tmp18 	%argrw{"wr"}
	assign		wave $tmp17 	%argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:50
# 
	mul		wave wave lineColour 	%line{50} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:52
# /// STIPPLING END
	compref		$tmp19 wave $const14 	%line{52} %argrw{"wrr"}
	div		$tmp20 $tmp19 $const16 	%argrw{"wrr"}
	add		dispOut dispOut $tmp20 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:61
#     float t_centre = 0.5;
	assign		s_centre $const17 	%line{61} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:62
# 
	assign		t_centre $const17 	%line{62} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:64
#     point stPoint = point(ss, tt, 0);
	mul		circleSize $const19 outerRadius 	%line{64} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:65
#     point rotPoint;
	point		stPoint ss tt $const20 	%line{65} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:71
#     point axisPoint = point(s_centre, t_centre, 1);
	point		centrePoint s_centre t_centre $const20 	%line{71} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:72
# 
	point		axisPoint s_centre t_centre $const4 	%line{72} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:75
#     float tOffset = t_centre;
	sub		sOffset s_centre circleSize 	%line{75} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:76
# 
	assign		tOffset t_centre 	%line{76} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:78
#     {
	for		$tmp21 48 49 127 128 	%line{78} %argrw{"r"}
	assign		___325_i $const14 	%argrw{"wr"}
	lt		$tmp21 ___325_i ringsPerCircle 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:80
#         for (int j = 0; j < circlesPerRing[i]; ++j) {
	compref		$tmp22 circlesPerRing ___325_i 	%line{80} %argrw{"wrr"}
	div		$tmp23 $const22 $tmp22 	%argrw{"wrr"}
	functioncall	$const23 54 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:88
# //   notice, this list of conditions and the following disclaimer.
	div		$tmp24 $const24 $const25 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___326_angle $tmp23 $tmp24 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:81
#             // Rotate surface
	for		$tmp26 56 58 125 126 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{81} %argrw{"r"}
	assign		___327_j $const14 	%argrw{"wr"}
	compref		$tmp25 circlesPerRing ___325_i 	%argrw{"wrr"}
	lt		$tmp26 ___327_j $tmp25 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:83
#             rotS = rotPoint[0];
	assign		$tmp28 ___327_j 	%line{83} %argrw{"wr"}
	mul		$tmp27 $tmp28 ___326_angle 	%argrw{"wrr"}
	functioncall	$const26 111 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:265
# int isnan (float x) BUILTIN;
	sub		$tmp29 axisPoint centrePoint 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{265} %argrw{"wrr"}
	normalize	___252_axis $tmp29 	%argrw{"wr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:267
# int isfinite (float x) BUILTIN;
	sincos		$tmp27 ___252_sinang ___252_cosang 	%line{267} %argrw{"rww"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:268
# float erf (float x) BUILTIN;
	sub		___252_cosang1 $const4 ___252_cosang 	%line{268} %argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:269
# float erfc (float x) BUILTIN;
	compref		___252_x ___252_axis $const14 	%line{269} %argrw{"wrr"}
	compref		___252_y ___252_axis $const3 	%argrw{"wrr"}
	compref		___252_z ___252_axis $const8 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:270
# 
	mul		$tmp30 ___252_x ___252_x 	%line{270} %argrw{"wrr"}
	mul		$tmp31 ___252_x ___252_x 	%argrw{"wrr"}
	sub		$tmp32 $const4 $tmp31 	%argrw{"wrr"}
	mul		$tmp33 $tmp32 ___252_cosang 	%argrw{"wrr"}
	add		$tmp34 $tmp30 $tmp33 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:271
# // Vector functions
	mul		$tmp35 ___252_x ___252_y 	%line{271} %argrw{"wrr"}
	mul		$tmp36 $tmp35 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp37 ___252_z ___252_sinang 	%argrw{"wrr"}
	add		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:272
# 
	mul		$tmp39 ___252_x ___252_z 	%line{272} %argrw{"wrr"}
	mul		$tmp40 $tmp39 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp41 ___252_y ___252_sinang 	%argrw{"wrr"}
	sub		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:274
# float dot (vector a, vector b) BUILTIN;
	mul		$tmp43 ___252_x ___252_y 	%line{274} %argrw{"wrr"}
	mul		$tmp44 $tmp43 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp45 ___252_z ___252_sinang 	%argrw{"wrr"}
	sub		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:275
# float length (vector v) BUILTIN;
	mul		$tmp47 ___252_y ___252_y 	%line{275} %argrw{"wrr"}
	mul		$tmp48 ___252_y ___252_y 	%argrw{"wrr"}
	sub		$tmp49 $const4 $tmp48 	%argrw{"wrr"}
	mul		$tmp50 $tmp49 ___252_cosang 	%argrw{"wrr"}
	add		$tmp51 $tmp47 $tmp50 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:276
# float distance (point a, point b) BUILTIN;
	mul		$tmp52 ___252_y ___252_z 	%line{276} %argrw{"wrr"}
	mul		$tmp53 $tmp52 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp54 ___252_x ___252_sinang 	%argrw{"wrr"}
	add		$tmp55 $tmp53 $tmp54 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:278
# {
	mul		$tmp56 ___252_x ___252_z 	%line{278} %argrw{"wrr"}
	mul		$tmp57 $tmp56 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp58 ___252_y ___252_sinang 	%argrw{"wrr"}
	add		$tmp59 $tmp57 $tmp58 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:279
#     vector d = b - a;
	mul		$tmp60 ___252_y ___252_z 	%line{279} %argrw{"wrr"}
	mul		$tmp61 $tmp60 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp62 ___252_x ___252_sinang 	%argrw{"wrr"}
	sub		$tmp63 $tmp61 $tmp62 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:280
#     float dd = dot(d, d);
	mul		$tmp64 ___252_z ___252_z 	%line{280} %argrw{"wrr"}
	mul		$tmp65 ___252_z ___252_z 	%argrw{"wrr"}
	sub		$tmp66 $const4 $tmp65 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___252_cosang 	%argrw{"wrr"}
	add		$tmp68 $tmp64 $tmp67 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:282
#         return distance(q, a);
	matrix		___252_M $tmp34 $tmp38 $tmp42 $const20 $tmp46 $tmp51 $tmp55 $const20 $tmp59 $tmp63 $tmp68 $const20 $const20 $const20 $const20 $const4 	%line{282} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:283
#     float t = dot(q - a, d)/dd;
	sub		$tmp70 stPoint centrePoint 	%line{283} %argrw{"wrr"}
	transformv	$tmp69 ___252_M $tmp70 	%argrw{"wrr"}
	add		rotPoint $tmp69 centrePoint 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:84
#             rotT = rotPoint[1];
	compref		rotS rotPoint $const14 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl"} %line{84} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:85
# 
	compref		rotT rotPoint $const3 	%line{85} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:88
#             if (dist <= outerRadius && dist >= innerRadius)
	point		$tmp71 sOffset tOffset $const20 	%line{88} %argrw{"wrrr"}
	point		$tmp72 rotS rotT $const20 	%argrw{"wrrr"}
	distance	___328_dist $tmp71 $tmp72 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:89
#             {
	le		$tmp73 ___328_dist outerRadius 	%line{89} %argrw{"wrr"}
	neq		$tmp74 $tmp73 $const14 	%argrw{"wrr"}
	if		$tmp74 122 122 	%argrw{"r"}
	ge		$tmp75 ___328_dist innerRadius 	%argrw{"wrr"}
	neq		$tmp76 $tmp75 $const14 	%argrw{"wrr"}
	assign		$tmp74 $tmp76 	%argrw{"wr"}
	if		$tmp74 125 125 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:91
#             }
	mul		$tmp77 ___328_dist $const27 	%line{91} %argrw{"wrr"}
	sub		dispOut dispOut $tmp77 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:81
#             // Rotate surface
	add		___327_j ___327_j $const3 	%line{81} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:94
#     }
	sub		sOffset sOffset distanceBetweenRows 	%line{94} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:78
#     {
	add		___325_i ___325_i $const3 	%line{78} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/tissuePatternCircles.osl:96
# /// PATTERN END
	add		t_centre t_centre $const17 	%line{96} %argrw{"wrr"}
	end
