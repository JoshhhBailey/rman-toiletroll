OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader testing
param	float	s	0		%meta{int,lockgeom,0}  %read{1,23} %write{2147483647,-1}
param	float	t	0		%meta{int,lockgeom,0}  %read{7,28} %write{2147483647,-1}
param	float	s_repeats	1		%read{1,1} %write{2147483647,-1}
param	float	t_repeats	1		%read{7,7} %write{2147483647,-1}
param	float	innerRadius	0		%read{112,112} %write{2147483647,-1}
param	float	outerRadius	0.0099999998		%read{0,109} %write{2147483647,-1}
param	color	circleColour	0 0 0		%read{116,116} %write{2147483647,-1}
param	int	ringsPerCircle	3		%read{41,41} %write{2147483647,-1}
param	point	circlesPerRing	50 44 36		%read{42,49} %write{2147483647,-1}
param	float	distanceBetweenRows	0		%read{41,119} %write{0,0} %initexpr
param	color	bgColour	0.94999999 0.94999999 0.94999999		%read{30,30} %write{2147483647,-1}
param	float	height	0.001		%read{16,16} %write{2147483647,-1}
param	int	frequency	50		%read{13,13} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{27,119}
oparam	float	dispOut	0		%read{2147483647,-1} %write{16,16}
global	point	P	%read{14,14} %write{2147483647,-1}
local	vector	___252_axis	%read{41,119} %write{41,119}
local	float	___252_cosang	%read{41,119} %write{41,119}
local	float	___252_sinang	%read{41,119} %write{41,119}
local	float	___252_cosang1	%read{41,119} %write{41,119}
local	float	___252_x	%read{41,119} %write{41,119}
local	float	___252_y	%read{41,119} %write{41,119}
local	float	___252_z	%read{41,119} %write{41,119}
local	matrix	___252_M	%read{41,119} %write{41,119}
local	float	ss	%read{34,34} %write{6,6}
local	float	tt	%read{34,34} %write{12,12}
local	color	lineColour	%read{26,26} %write{17,21}
local	float	lineWidth	%read{19,28} %write{18,18}
local	float	waveLength	%read{23,23} %write{22,22}
local	color	colour	%read{26,27} %write{25,26}
local	float	s_centre	%read{35,37} %write{31,31}
local	float	t_centre	%read{35,120} %write{32,120}
local	float	circleSize	%read{37,37} %write{33,33}
local	point	stPoint	%read{41,119} %write{34,34}
local	point	rotPoint	%read{41,119} %write{41,119}
local	float	rotS	%read{41,119} %write{41,119}
local	float	rotT	%read{41,119} %write{41,119}
local	point	centrePoint	%read{41,119} %write{35,35}
local	point	axisPoint	%read{41,119} %write{36,36}
local	float	sOffset	%read{41,119} %write{37,119}
local	float	tOffset	%read{41,119} %write{38,38}
local	int	___326_i	%read{41,119} %write{40,119}
local	float	___327_angle	%read{41,119} %write{41,119}
local	int	___328_j	%read{41,119} %write{41,119}
local	float	___329_dist	%read{41,119} %write{41,119}
const	float	$const2	5		%read{0,0} %write{2147483647,-1}
temp	float	$tmp1	%read{3,6} %write{1,1}
const	int	$const3	1		%read{59,119} %write{2147483647,-1}
const	float	$const4	1		%read{3,100} %write{2147483647,-1}
const	string	$const5	"mod"		%read{2,8} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{9,12} %write{7,7}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{16,16} %write{15,15}
const	string	$const6	"perlin"		%read{15,15} %write{2147483647,-1}
temp	point	$tmp10	%read{15,15} %write{14,14}
temp	point	$tmp11	%read{14,14} %write{13,13}
const	color	$const7	0 0 0		%read{17,17} %write{2147483647,-1}
const	float	$const8	0.0099999998		%read{18,18} %write{2147483647,-1}
temp	int	$tmp12	%read{20,20} %write{19,19}
const	color	$const9	0.94999999 0.94999999 0.94999999		%read{21,21} %write{2147483647,-1}
const	float	$const10	50		%read{22,22} %write{2147483647,-1}
temp	float	$tmp13	%read{25,25} %write{24,24}
temp	float	$tmp14	%read{24,24} %write{23,23}
temp	int	$tmp15	%read{29,29} %write{28,28}
const	float	$const11	0.5		%read{31,120} %write{2147483647,-1}
const	float	$const13	25		%read{33,33} %write{2147483647,-1}
const	int	$const14	0		%read{40,113} %write{2147483647,-1}
const	float	$const15	0		%read{34,107} %write{2147483647,-1}
temp	int	$tmp16	%read{39,119} %write{40,119}
temp	float	$tmp17	%read{41,119} %write{41,119}
temp	float	$tmp18	%read{41,119} %write{41,119}
const	float	$const17	360		%read{43,43} %write{2147483647,-1}
const	string	$const18	"radians"		%read{44,44} %write{2147483647,-1}
const	float	$const19	3.1415927		%read{45,45} %write{2147483647,-1}
const	float	$const20	180		%read{45,45} %write{2147483647,-1}
temp	float	$tmp19	%read{41,119} %write{41,119}
temp	float	$tmp20	%read{41,119} %write{41,119}
temp	int	$tmp21	%read{41,119} %write{41,119}
temp	float	$tmp22	%read{41,119} %write{41,119}
temp	float	$tmp23	%read{41,119} %write{41,119}
const	string	$const21	"rotate"		%read{53,53} %write{2147483647,-1}
temp	vector	$tmp24	%read{41,119} %write{41,119}
const	int	$const22	2		%read{60,60} %write{2147483647,-1}
temp	float	$tmp25	%read{41,119} %write{41,119}
temp	float	$tmp26	%read{41,119} %write{41,119}
temp	float	$tmp27	%read{41,119} %write{41,119}
temp	float	$tmp28	%read{41,119} %write{41,119}
temp	float	$tmp29	%read{41,119} %write{41,119}
temp	float	$tmp30	%read{41,119} %write{41,119}
temp	float	$tmp31	%read{41,119} %write{41,119}
temp	float	$tmp32	%read{41,119} %write{41,119}
temp	float	$tmp33	%read{41,119} %write{41,119}
temp	float	$tmp34	%read{41,119} %write{41,119}
temp	float	$tmp35	%read{41,119} %write{41,119}
temp	float	$tmp36	%read{41,119} %write{41,119}
temp	float	$tmp37	%read{41,119} %write{41,119}
temp	float	$tmp38	%read{41,119} %write{41,119}
temp	float	$tmp39	%read{41,119} %write{41,119}
temp	float	$tmp40	%read{41,119} %write{41,119}
temp	float	$tmp41	%read{41,119} %write{41,119}
temp	float	$tmp42	%read{41,119} %write{41,119}
temp	float	$tmp43	%read{41,119} %write{41,119}
temp	float	$tmp44	%read{41,119} %write{41,119}
temp	float	$tmp45	%read{41,119} %write{41,119}
temp	float	$tmp46	%read{41,119} %write{41,119}
temp	float	$tmp47	%read{41,119} %write{41,119}
temp	float	$tmp48	%read{41,119} %write{41,119}
temp	float	$tmp49	%read{41,119} %write{41,119}
temp	float	$tmp50	%read{41,119} %write{41,119}
temp	float	$tmp51	%read{41,119} %write{41,119}
temp	float	$tmp52	%read{41,119} %write{41,119}
temp	float	$tmp53	%read{41,119} %write{41,119}
temp	float	$tmp54	%read{41,119} %write{41,119}
temp	float	$tmp55	%read{41,119} %write{41,119}
temp	float	$tmp56	%read{41,119} %write{41,119}
temp	float	$tmp57	%read{41,119} %write{41,119}
temp	float	$tmp58	%read{41,119} %write{41,119}
temp	float	$tmp59	%read{41,119} %write{41,119}
temp	float	$tmp60	%read{41,119} %write{41,119}
temp	float	$tmp61	%read{41,119} %write{41,119}
temp	float	$tmp62	%read{41,119} %write{41,119}
temp	float	$tmp63	%read{41,119} %write{41,119}
temp	vector	$tmp64	%read{41,119} %write{41,119}
temp	vector	$tmp65	%read{41,119} %write{41,119}
temp	point	$tmp66	%read{41,119} %write{41,119}
temp	point	$tmp67	%read{41,119} %write{41,119}
temp	int	$tmp68	%read{41,119} %write{41,119}
temp	int	$tmp69	%read{41,119} %write{41,119}
temp	int	$tmp70	%read{41,119} %write{41,119}
temp	int	$tmp71	%read{41,119} %write{41,119}
code distanceBetweenRows
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:18
# 
	mul		distanceBetweenRows outerRadius $const2 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{18} %argrw{"wrr"}
code ___main___
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:30
#     float tt = mod(t * t_repeats, 1);
	mul		$tmp1 s s_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{30} %argrw{"wrr"}
	functioncall	$const5 7 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# vector log (vector a, float b) { return log(a)/log(b); }
	div		$tmp3 $tmp1 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const4 $tmp2 	%argrw{"wrr"}
	sub		ss $tmp1 $tmp4 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:31
# 
	mul		$tmp5 t t_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{31} %argrw{"wrr"}
	functioncall	$const5 13 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# point  log (point a,  float b) { return log(a)/log(b); }
	div		$tmp7 $tmp5 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const4 $tmp6 	%argrw{"wrr"}
	sub		tt $tmp5 $tmp8 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:35
# 
	assign		$tmp11 frequency 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{35} %argrw{"wr"}
	mul		$tmp10 P $tmp11 	%argrw{"wrr"}
	noise		$tmp9 $const6 $tmp10 	%argrw{"wrr"}
	mul		dispOut height $tmp9 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:37
#     float lineWidth = 0.01;
	assign		lineColour $const7 	%line{37} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:38
#     
	assign		lineWidth $const8 	%line{38} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:41
#     {
	lt		$tmp12 t lineWidth 	%line{41} %argrw{"wrr"}
	if		$tmp12 22 22 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:43
#     }
	assign		lineColour $const9 	%line{43} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:47
#     color colour = color(sin(waveLength * s));
	assign		waveLength $const10 	%line{47} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:48
#     colour *= lineColour;
	mul		$tmp14 waveLength s 	%line{48} %argrw{"wrr"}
	sin		$tmp13 $tmp14 	%argrw{"wr"}
	assign		colour $tmp13 	%argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:49
#     
	mul		colour colour lineColour 	%line{49} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:51
# 
	assign		resultRGB colour 	%line{51} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:54
#     {
	gt		$tmp15 t lineWidth 	%line{54} %argrw{"wrr"}
	if		$tmp15 31 31 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:56
#     }
	assign		resultRGB bgColour 	%line{56} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:64
#     float t_centre = 0.5;
	assign		s_centre $const11 	%line{64} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:65
# 
	assign		t_centre $const11 	%line{65} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:67
#     point stPoint = point(ss, tt, 0);
	mul		circleSize $const13 outerRadius 	%line{67} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:68
#     point rotPoint;
	point		stPoint ss tt $const15 	%line{68} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:74
#     point axisPoint = point(s_centre, t_centre, 1);
	point		centrePoint s_centre t_centre $const15 	%line{74} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:75
# 
	point		axisPoint s_centre t_centre $const4 	%line{75} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:78
#     float tOffset = t_centre;
	sub		sOffset s_centre circleSize 	%line{78} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:79
# 
	assign		tOffset t_centre 	%line{79} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:81
#     {
	for		$tmp16 41 42 119 120 	%line{81} %argrw{"r"}
	assign		___326_i $const14 	%argrw{"wr"}
	lt		$tmp16 ___326_i ringsPerCircle 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:83
#         for (int j = 0; j < circlesPerRing[i]; ++j) {
	compref		$tmp17 circlesPerRing ___326_i 	%line{83} %argrw{"wrr"}
	div		$tmp18 $const17 $tmp17 	%argrw{"wrr"}
	functioncall	$const18 47 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:88
# // modification, are permitted provided that the following conditions are
	div		$tmp19 $const19 $const20 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___327_angle $tmp18 $tmp19 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:84
#             // Rotate surface
	for		$tmp21 49 51 117 118 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{84} %argrw{"r"}
	assign		___328_j $const14 	%argrw{"wr"}
	compref		$tmp20 circlesPerRing ___326_i 	%argrw{"wrr"}
	lt		$tmp21 ___328_j $tmp20 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:86
#             rotS = rotPoint[0];
	assign		$tmp23 ___328_j 	%line{86} %argrw{"wr"}
	mul		$tmp22 $tmp23 ___327_angle 	%argrw{"wrr"}
	functioncall	$const21 104 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:265
# point  select (point  x, point  y, int cond) BUILTIN;
	sub		$tmp24 axisPoint centrePoint 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{265} %argrw{"wrr"}
	normalize	___252_axis $tmp24 	%argrw{"wr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:267
# float  select (float  x, float  y, int cond) BUILTIN;
	sincos		$tmp22 ___252_sinang ___252_cosang 	%line{267} %argrw{"rww"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:268
# int isnan (float x) BUILTIN;
	sub		___252_cosang1 $const4 ___252_cosang 	%line{268} %argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:269
# int isinf (float x) BUILTIN;
	compref		___252_x ___252_axis $const14 	%line{269} %argrw{"wrr"}
	compref		___252_y ___252_axis $const3 	%argrw{"wrr"}
	compref		___252_z ___252_axis $const22 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:270
# int isfinite (float x) BUILTIN;
	mul		$tmp25 ___252_x ___252_x 	%line{270} %argrw{"wrr"}
	mul		$tmp26 ___252_x ___252_x 	%argrw{"wrr"}
	sub		$tmp27 $const4 $tmp26 	%argrw{"wrr"}
	mul		$tmp28 $tmp27 ___252_cosang 	%argrw{"wrr"}
	add		$tmp29 $tmp25 $tmp28 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:271
# float erf (float x) BUILTIN;
	mul		$tmp30 ___252_x ___252_y 	%line{271} %argrw{"wrr"}
	mul		$tmp31 $tmp30 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp32 ___252_z ___252_sinang 	%argrw{"wrr"}
	add		$tmp33 $tmp31 $tmp32 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:272
# float erfc (float x) BUILTIN;
	mul		$tmp34 ___252_x ___252_z 	%line{272} %argrw{"wrr"}
	mul		$tmp35 $tmp34 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp36 ___252_y ___252_sinang 	%argrw{"wrr"}
	sub		$tmp37 $tmp35 $tmp36 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:274
# // Vector functions
	mul		$tmp38 ___252_x ___252_y 	%line{274} %argrw{"wrr"}
	mul		$tmp39 $tmp38 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp40 ___252_z ___252_sinang 	%argrw{"wrr"}
	sub		$tmp41 $tmp39 $tmp40 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:275
# 
	mul		$tmp42 ___252_y ___252_y 	%line{275} %argrw{"wrr"}
	mul		$tmp43 ___252_y ___252_y 	%argrw{"wrr"}
	sub		$tmp44 $const4 $tmp43 	%argrw{"wrr"}
	mul		$tmp45 $tmp44 ___252_cosang 	%argrw{"wrr"}
	add		$tmp46 $tmp42 $tmp45 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:276
# vector cross (vector a, vector b) BUILTIN;
	mul		$tmp47 ___252_y ___252_z 	%line{276} %argrw{"wrr"}
	mul		$tmp48 $tmp47 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp49 ___252_x ___252_sinang 	%argrw{"wrr"}
	add		$tmp50 $tmp48 $tmp49 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:278
# float length (vector v) BUILTIN;
	mul		$tmp51 ___252_x ___252_z 	%line{278} %argrw{"wrr"}
	mul		$tmp52 $tmp51 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp53 ___252_y ___252_sinang 	%argrw{"wrr"}
	add		$tmp54 $tmp52 $tmp53 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:279
# float distance (point a, point b) BUILTIN;
	mul		$tmp55 ___252_y ___252_z 	%line{279} %argrw{"wrr"}
	mul		$tmp56 $tmp55 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp57 ___252_x ___252_sinang 	%argrw{"wrr"}
	sub		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:280
# float distance (point a, point b, point q)
	mul		$tmp59 ___252_z ___252_z 	%line{280} %argrw{"wrr"}
	mul		$tmp60 ___252_z ___252_z 	%argrw{"wrr"}
	sub		$tmp61 $const4 $tmp60 	%argrw{"wrr"}
	mul		$tmp62 $tmp61 ___252_cosang 	%argrw{"wrr"}
	add		$tmp63 $tmp59 $tmp62 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:282
#     vector d = b - a;
	matrix		___252_M $tmp29 $tmp33 $tmp37 $const15 $tmp41 $tmp46 $tmp50 $const15 $tmp54 $tmp58 $tmp63 $const15 $const15 $const15 $const15 $const4 	%line{282} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:283
#     float dd = dot(d, d);
	sub		$tmp65 stPoint centrePoint 	%line{283} %argrw{"wrr"}
	transformv	$tmp64 ___252_M $tmp65 	%argrw{"wrr"}
	add		rotPoint $tmp64 centrePoint 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:87
#             rotT = rotPoint[1];
	compref		rotS rotPoint $const14 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{87} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:88
# 
	compref		rotT rotPoint $const3 	%line{88} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:91
#             if (dist <= outerRadius && dist >= innerRadius)
	point		$tmp66 sOffset tOffset $const15 	%line{91} %argrw{"wrrr"}
	point		$tmp67 rotS rotT $const15 	%argrw{"wrrr"}
	distance	___329_dist $tmp66 $tmp67 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:92
#             {
	le		$tmp68 ___329_dist outerRadius 	%line{92} %argrw{"wrr"}
	neq		$tmp69 $tmp68 $const14 	%argrw{"wrr"}
	if		$tmp69 115 115 	%argrw{"r"}
	ge		$tmp70 ___329_dist innerRadius 	%argrw{"wrr"}
	neq		$tmp71 $tmp70 $const14 	%argrw{"wrr"}
	assign		$tmp69 $tmp71 	%argrw{"wr"}
	if		$tmp69 117 117 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:94
#                 //dispOut -= dist;
	assign		resultRGB circleColour 	%line{94} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:84
#             // Rotate surface
	add		___328_j ___328_j $const3 	%line{84} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:98
#     }
	sub		sOffset sOffset distanceBetweenRows 	%line{98} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:81
#     {
	add		___326_i ___326_i $const3 	%line{81} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:100
# }
	add		t_centre t_centre $const11 	%line{100} %argrw{"wrr"}
	end
