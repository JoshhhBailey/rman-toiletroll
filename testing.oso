OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader testing
param	float	s	0		%meta{int,lockgeom,0}  %read{3,3} %write{2147483647,-1}
param	float	t	0		%meta{int,lockgeom,0}  %read{3,3} %write{2147483647,-1}
param	float	s_centre	0.5		%read{1,2} %write{2147483647,-1}
param	float	t_centre	0.5		%read{1,6} %write{2147483647,-1}
param	float	innerRadius	0		%read{81,81} %write{2147483647,-1}
param	float	outerRadius	0.0099999998		%read{0,78} %write{2147483647,-1}
param	color	circleColour	1 0 0		%read{85,85} %write{2147483647,-1}
param	int	rows	3		%read{10,10} %write{2147483647,-1}
param	point	circlesPerRow	18 9 0		%read{11,18} %write{2147483647,-1}
param	float	distanceBetweenRows	0		%read{10,88} %write{0,0} %initexpr
param	color	bgColour	1 1 1		%read{7,7} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{7,88}
local	vector	___252_axis	%read{10,88} %write{10,88}
local	float	___252_cosang	%read{10,88} %write{10,88}
local	float	___252_sinang	%read{10,88} %write{10,88}
local	float	___252_cosang1	%read{10,88} %write{10,88}
local	float	___252_x	%read{10,88} %write{10,88}
local	float	___252_y	%read{10,88} %write{10,88}
local	float	___252_z	%read{10,88} %write{10,88}
local	matrix	___252_M	%read{10,88} %write{10,88}
local	point	centrePoint	%read{10,88} %write{1,1}
local	point	axisPoint	%read{10,88} %write{2,2}
local	point	stPoint	%read{10,88} %write{3,3}
local	point	rotPoint	%read{10,88} %write{10,88}
local	float	rotS	%read{10,88} %write{10,88}
local	float	rotT	%read{10,88} %write{10,88}
local	float	sOffset	%read{10,88} %write{5,88}
local	float	tOffset	%read{10,88} %write{6,6}
local	int	___324_i	%read{10,88} %write{9,88}
local	float	___325_angle	%read{10,88} %write{10,88}
local	int	___326_j	%read{10,88} %write{10,88}
local	float	___327_dist	%read{10,88} %write{10,88}
const	float	$const2	5		%read{0,0} %write{2147483647,-1}
const	int	$const3	0		%read{9,82} %write{2147483647,-1}
const	float	$const4	0		%read{1,76} %write{2147483647,-1}
const	int	$const5	1		%read{28,88} %write{2147483647,-1}
const	float	$const6	1		%read{2,69} %write{2147483647,-1}
const	int	$const7	2		%read{29,29} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{4,4}
const	float	$const8	2		%read{4,4} %write{2147483647,-1}
temp	int	$tmp2	%read{8,88} %write{9,88}
temp	float	$tmp3	%read{10,88} %write{10,88}
temp	float	$tmp4	%read{10,88} %write{10,88}
const	float	$const10	360		%read{12,12} %write{2147483647,-1}
const	string	$const11	"radians"		%read{13,13} %write{2147483647,-1}
const	float	$const12	3.1415927		%read{14,14} %write{2147483647,-1}
const	float	$const13	180		%read{14,14} %write{2147483647,-1}
temp	float	$tmp5	%read{10,88} %write{10,88}
temp	float	$tmp6	%read{10,88} %write{10,88}
temp	int	$tmp7	%read{10,88} %write{10,88}
temp	float	$tmp8	%read{10,88} %write{10,88}
temp	float	$tmp9	%read{10,88} %write{10,88}
const	string	$const14	"rotate"		%read{22,22} %write{2147483647,-1}
temp	vector	$tmp10	%read{10,88} %write{10,88}
temp	float	$tmp11	%read{10,88} %write{10,88}
temp	float	$tmp12	%read{10,88} %write{10,88}
temp	float	$tmp13	%read{10,88} %write{10,88}
temp	float	$tmp14	%read{10,88} %write{10,88}
temp	float	$tmp15	%read{10,88} %write{10,88}
temp	float	$tmp16	%read{10,88} %write{10,88}
temp	float	$tmp17	%read{10,88} %write{10,88}
temp	float	$tmp18	%read{10,88} %write{10,88}
temp	float	$tmp19	%read{10,88} %write{10,88}
temp	float	$tmp20	%read{10,88} %write{10,88}
temp	float	$tmp21	%read{10,88} %write{10,88}
temp	float	$tmp22	%read{10,88} %write{10,88}
temp	float	$tmp23	%read{10,88} %write{10,88}
temp	float	$tmp24	%read{10,88} %write{10,88}
temp	float	$tmp25	%read{10,88} %write{10,88}
temp	float	$tmp26	%read{10,88} %write{10,88}
temp	float	$tmp27	%read{10,88} %write{10,88}
temp	float	$tmp28	%read{10,88} %write{10,88}
temp	float	$tmp29	%read{10,88} %write{10,88}
temp	float	$tmp30	%read{10,88} %write{10,88}
temp	float	$tmp31	%read{10,88} %write{10,88}
temp	float	$tmp32	%read{10,88} %write{10,88}
temp	float	$tmp33	%read{10,88} %write{10,88}
temp	float	$tmp34	%read{10,88} %write{10,88}
temp	float	$tmp35	%read{10,88} %write{10,88}
temp	float	$tmp36	%read{10,88} %write{10,88}
temp	float	$tmp37	%read{10,88} %write{10,88}
temp	float	$tmp38	%read{10,88} %write{10,88}
temp	float	$tmp39	%read{10,88} %write{10,88}
temp	float	$tmp40	%read{10,88} %write{10,88}
temp	float	$tmp41	%read{10,88} %write{10,88}
temp	float	$tmp42	%read{10,88} %write{10,88}
temp	float	$tmp43	%read{10,88} %write{10,88}
temp	float	$tmp44	%read{10,88} %write{10,88}
temp	float	$tmp45	%read{10,88} %write{10,88}
temp	float	$tmp46	%read{10,88} %write{10,88}
temp	float	$tmp47	%read{10,88} %write{10,88}
temp	float	$tmp48	%read{10,88} %write{10,88}
temp	float	$tmp49	%read{10,88} %write{10,88}
temp	vector	$tmp50	%read{10,88} %write{10,88}
temp	vector	$tmp51	%read{10,88} %write{10,88}
temp	point	$tmp52	%read{10,88} %write{10,88}
temp	point	$tmp53	%read{10,88} %write{10,88}
temp	int	$tmp54	%read{10,88} %write{10,88}
temp	int	$tmp55	%read{10,88} %write{10,88}
temp	int	$tmp56	%read{10,88} %write{10,88}
temp	int	$tmp57	%read{10,88} %write{10,88}
code distanceBetweenRows
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:24
# 
	mul		distanceBetweenRows outerRadius $const2 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl"} %line{24} %argrw{"wrr"}
code ___main___
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:29
#     point axisPoint = point(s_centre, t_centre, 1);
	point		centrePoint s_centre t_centre $const4 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl"} %line{29} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:30
#     point stPoint = point(s, t, 0);
	point		axisPoint s_centre t_centre $const6 	%line{30} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:31
#     point rotPoint;
	point		stPoint s t $const4 	%line{31} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:34
#     float tOffset = t_centre;
	mul		$tmp1 $const8 outerRadius 	%line{34} %argrw{"wrr"}
	sub		sOffset $const6 $tmp1 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:35
#     
	assign		tOffset t_centre 	%line{35} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:37
#     for (int i = 0; i < rows; ++i)
	assign		resultRGB bgColour 	%line{37} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:38
#     {
	for		$tmp2 10 11 88 89 	%line{38} %argrw{"r"}
	assign		___324_i $const3 	%argrw{"wr"}
	lt		$tmp2 ___324_i rows 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:40
#         for (int j = 0; j < circlesPerRow[i]; ++j) {
	compref		$tmp3 circlesPerRow ___324_i 	%line{40} %argrw{"wrr"}
	div		$tmp4 $const10 $tmp3 	%argrw{"wrr"}
	functioncall	$const11 16 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:88
# #endif
	div		$tmp5 $const12 $const13 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___325_angle $tmp4 $tmp5 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:41
#             // Rotate surface
	for		$tmp7 18 20 86 87 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl"} %line{41} %argrw{"r"}
	assign		___326_j $const3 	%argrw{"wr"}
	compref		$tmp6 circlesPerRow ___324_i 	%argrw{"wrr"}
	lt		$tmp7 ___326_j $tmp6 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:43
#             rotS = rotPoint[0];
	assign		$tmp9 ___326_j 	%line{43} %argrw{"wr"}
	mul		$tmp8 $tmp9 ___325_angle 	%argrw{"wrr"}
	functioncall	$const14 73 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:265
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	sub		$tmp10 axisPoint centrePoint 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{265} %argrw{"wrr"}
	normalize	___252_axis $tmp10 	%argrw{"wr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:267
#         g = sqrt (g);
	sincos		$tmp8 ___252_sinang ___252_cosang 	%line{267} %argrw{"rww"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:268
#         float beta = g - c;
	sub		___252_cosang1 $const6 ___252_cosang 	%line{268} %argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:269
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	compref		___252_x ___252_axis $const3 	%line{269} %argrw{"wrr"}
	compref		___252_y ___252_axis $const5 	%argrw{"wrr"}
	compref		___252_z ___252_axis $const7 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:270
#         F = 0.5 * (1.0 + sqr(F));
	mul		$tmp11 ___252_x ___252_x 	%line{270} %argrw{"wrr"}
	mul		$tmp12 ___252_x ___252_x 	%argrw{"wrr"}
	sub		$tmp13 $const6 $tmp12 	%argrw{"wrr"}
	mul		$tmp14 $tmp13 ___252_cosang 	%argrw{"wrr"}
	add		$tmp15 $tmp11 $tmp14 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:271
#         F *= sqr (beta / (g+c));
	mul		$tmp16 ___252_x ___252_y 	%line{271} %argrw{"wrr"}
	mul		$tmp17 $tmp16 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp18 ___252_z ___252_sinang 	%argrw{"wrr"}
	add		$tmp19 $tmp17 $tmp18 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:272
#         Kr = F;
	mul		$tmp20 ___252_x ___252_z 	%line{272} %argrw{"wrr"}
	mul		$tmp21 $tmp20 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp22 ___252_y ___252_sinang 	%argrw{"wrr"}
	sub		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:274
#         // OPT: the following recomputes some of the above values, but it 
	mul		$tmp24 ___252_x ___252_y 	%line{274} %argrw{"wrr"}
	mul		$tmp25 $tmp24 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp26 ___252_z ___252_sinang 	%argrw{"wrr"}
	sub		$tmp27 $tmp25 $tmp26 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:275
#         // gives us the same result as if the shader-writer called refract()
	mul		$tmp28 ___252_y ___252_y 	%line{275} %argrw{"wrr"}
	mul		$tmp29 ___252_y ___252_y 	%argrw{"wrr"}
	sub		$tmp30 $const6 $tmp29 	%argrw{"wrr"}
	mul		$tmp31 $tmp30 ___252_cosang 	%argrw{"wrr"}
	add		$tmp32 $tmp28 $tmp31 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:276
#         T = refract(I, N, eta);
	mul		$tmp33 ___252_y ___252_z 	%line{276} %argrw{"wrr"}
	mul		$tmp34 $tmp33 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp35 ___252_x ___252_sinang 	%argrw{"wrr"}
	add		$tmp36 $tmp34 $tmp35 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:278
#         // total internal reflection
	mul		$tmp37 ___252_x ___252_z 	%line{278} %argrw{"wrr"}
	mul		$tmp38 $tmp37 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp39 ___252_y ___252_sinang 	%argrw{"wrr"}
	add		$tmp40 $tmp38 $tmp39 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:279
#         Kr = 1.0;
	mul		$tmp41 ___252_y ___252_z 	%line{279} %argrw{"wrr"}
	mul		$tmp42 $tmp41 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp43 ___252_x ___252_sinang 	%argrw{"wrr"}
	sub		$tmp44 $tmp42 $tmp43 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:280
#         Kt = 0.0;
	mul		$tmp45 ___252_z ___252_z 	%line{280} %argrw{"wrr"}
	mul		$tmp46 ___252_z ___252_z 	%argrw{"wrr"}
	sub		$tmp47 $const6 $tmp46 	%argrw{"wrr"}
	mul		$tmp48 $tmp47 ___252_cosang 	%argrw{"wrr"}
	add		$tmp49 $tmp45 $tmp48 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:282
#     }
	matrix		___252_M $tmp15 $tmp19 $tmp23 $const4 $tmp27 $tmp32 $tmp36 $const4 $tmp40 $tmp44 $tmp49 $const4 $const4 $const4 $const4 $const6 	%line{282} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:283
# }
	sub		$tmp51 stPoint centrePoint 	%line{283} %argrw{"wrr"}
	transformv	$tmp50 ___252_M $tmp51 	%argrw{"wrr"}
	add		rotPoint $tmp50 centrePoint 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:44
#             rotT = rotPoint[1];
	compref		rotS rotPoint $const3 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl"} %line{44} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:45
# 
	compref		rotT rotPoint $const5 	%line{45} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:48
#             if (dist <= outerRadius && dist >= innerRadius)
	point		$tmp52 sOffset tOffset $const4 	%line{48} %argrw{"wrrr"}
	point		$tmp53 rotS rotT $const4 	%argrw{"wrrr"}
	distance	___327_dist $tmp52 $tmp53 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:49
#             {
	le		$tmp54 ___327_dist outerRadius 	%line{49} %argrw{"wrr"}
	neq		$tmp55 $tmp54 $const3 	%argrw{"wrr"}
	if		$tmp55 84 84 	%argrw{"r"}
	ge		$tmp56 ___327_dist innerRadius 	%argrw{"wrr"}
	neq		$tmp57 $tmp56 $const3 	%argrw{"wrr"}
	assign		$tmp55 $tmp57 	%argrw{"wr"}
	if		$tmp55 86 86 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:51
#             }
	assign		resultRGB circleColour 	%line{51} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:41
#             // Rotate surface
	add		___326_j ___326_j $const5 	%line{41} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:54
#     }
	sub		sOffset sOffset distanceBetweenRows 	%line{54} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\testing.osl:38
#     {
	add		___324_i ___324_i $const5 	%line{38} %argrw{"wrr"}
	end
