OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader testing
param	float	s	0		%meta{int,lockgeom,0}  %read{1,63} %write{2147483647,-1}
param	float	t	0		%meta{int,lockgeom,0}  %read{7,64} %write{2147483647,-1}
param	float	s_repeats	4		%read{1,63} %write{2147483647,-1}
param	float	t_repeats	4		%read{7,64} %write{2147483647,-1}
param	float	innerRadius	0		%read{163,163} %write{2147483647,-1}
param	float	outerRadius	0.0099999998		%read{0,160} %write{2147483647,-1}
param	int	rings	3		%read{77,92} %write{2147483647,-1}
param	float	distanceBetweenRows	0		%read{79,171} %write{0,0} %initexpr
param	float	height	0.0049999999		%read{17,17} %write{2147483647,-1}
param	int	frequency	5		%read{14,14} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{13,171}
oparam	float	dispOut	0		%read{37,171} %write{17,171}
global	point	P	%read{15,85} %write{2147483647,-1}
local	vector	___252_axis	%read{92,171} %write{92,171}
local	float	___252_cosang	%read{92,171} %write{92,171}
local	float	___252_sinang	%read{92,171} %write{92,171}
local	float	___252_cosang1	%read{92,171} %write{92,171}
local	float	___252_x	%read{92,171} %write{92,171}
local	float	___252_y	%read{92,171} %write{92,171}
local	float	___252_z	%read{92,171} %write{92,171}
local	matrix	___252_M	%read{92,171} %write{92,171}
local	float	ss	%read{62,75} %write{6,6}
local	float	tt	%read{62,75} %write{12,12}
local	float	stipRepeats	%read{19,19} %write{18,18}
local	float	stipSS	%read{27,27} %write{24,24}
local	color	lineColour	%read{34,34} %write{25,29}
local	float	lineWidth	%read{27,27} %write{26,26}
local	float	waveLength	%read{31,31} %write{30,30}
local	color	wave	%read{34,35} %write{33,34}
local	float	circleSeed	%read{41,46} %write{40,43}
local	float	a	%read{47,47} %write{44,44}
local	float	b	%read{49,49} %write{45,45}
local	float	c	%read{51,51} %write{46,46}
local	point	circlesPerRing	%read{92,171} %write{53,53}
local	float	s_centre	%read{68,73} %write{54,54}
local	float	t_centre	%read{70,74} %write{55,55}
local	float	radiusOffset	%read{61,61} %write{59,59}
local	float	circleSize	%read{73,80} %write{61,61}
local	point	stPoint	%read{92,171} %write{62,62}
local	point	rotPoint	%read{92,171} %write{92,171}
local	float	rotS	%read{92,171} %write{92,171}
local	float	rotT	%read{92,171} %write{92,171}
local	float	offsetSeed	%read{67,69} %write{66,66}
local	point	centrePoint	%read{76,171} %write{71,71}
local	point	axisPoint	%read{92,171} %write{72,72}
local	float	sOffset	%read{92,171} %write{73,171}
local	float	tOffset	%read{92,171} %write{74,74}
local	float	___326_simHeight	%read{87,87} %write{83,83}
local	float	___326_simFreq	%read{85,85} %write{84,84}
local	int	___328_i	%read{92,171} %write{91,171}
local	float	___329_angle	%read{92,171} %write{92,171}
local	int	___330_j	%read{92,171} %write{92,171}
local	float	___331_dist	%read{92,171} %write{92,171}
const	float	$const2	5		%read{0,84} %write{2147483647,-1}
temp	float	$tmp1	%read{3,6} %write{1,1}
const	int	$const3	1		%read{77,171} %write{2147483647,-1}
const	float	$const4	1		%read{3,151} %write{2147483647,-1}
const	string	$const5	"mod"		%read{2,20} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{9,12} %write{7,7}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
const	color	$const6	0.94999999 0.94999999 0.94999999		%read{13,29} %write{2147483647,-1}
temp	float	$tmp9	%read{17,17} %write{16,16}
const	string	$const7	"perlin"		%read{16,16} %write{2147483647,-1}
temp	point	$tmp10	%read{16,16} %write{15,15}
temp	point	$tmp11	%read{15,15} %write{14,14}
const	int	$const8	2		%read{18,111} %write{2147483647,-1}
temp	float	$tmp12	%read{21,24} %write{19,19}
temp	float	$tmp13	%read{23,23} %write{22,22}
temp	float	$tmp14	%read{22,22} %write{21,21}
temp	float	$tmp15	%read{24,24} %write{23,23}
const	color	$const9	0 0 0		%read{25,168} %write{2147483647,-1}
const	float	$const10	0.001		%read{26,26} %write{2147483647,-1}
temp	int	$tmp16	%read{28,28} %write{27,27}
const	float	$const11	3.141		%read{30,30} %write{2147483647,-1}
const	float	$const13	30		%read{30,30} %write{2147483647,-1}
temp	float	$tmp17	%read{33,33} %write{32,32}
temp	float	$tmp18	%read{32,32} %write{31,31}
const	int	$const14	0		%read{35,164} %write{2147483647,-1}
temp	float	$tmp19	%read{36,36} %write{35,35}
temp	float	$tmp20	%read{37,37} %write{36,36}
const	float	$const16	150		%read{36,36} %write{2147483647,-1}
const	string	$const17	"cell"		%read{40,65} %write{2147483647,-1}
temp	float	$tmp21	%read{40,40} %write{38,38}
temp	float	$tmp22	%read{40,40} %write{39,39}
const	float	$const18	0.5		%read{41,83} %write{2147483647,-1}
temp	int	$tmp23	%read{42,42} %write{41,41}
const	float	$const20	50		%read{44,44} %write{2147483647,-1}
const	float	$const22	44		%read{45,45} %write{2147483647,-1}
const	float	$const24	36		%read{46,46} %write{2147483647,-1}
temp	int	$tmp24	%read{48,48} %write{47,47}
temp	float	$tmp25	%read{53,53} %write{48,48}
temp	int	$tmp26	%read{50,50} %write{49,49}
temp	float	$tmp27	%read{53,53} %write{50,50}
temp	int	$tmp28	%read{52,52} %write{51,51}
temp	float	$tmp29	%read{53,53} %write{52,52}
temp	float	$tmp30	%read{59,59} %write{58,58}
temp	float	$tmp31	%read{58,58} %write{56,56}
temp	float	$tmp32	%read{58,58} %write{57,57}
const	float	$const25	0.2		%read{59,59} %write{2147483647,-1}
temp	float	$tmp33	%read{61,61} %write{60,60}
const	float	$const27	15		%read{60,60} %write{2147483647,-1}
const	float	$const28	0		%read{62,158} %write{2147483647,-1}
temp	float	$tmp34	%read{66,66} %write{65,65}
temp	float	$tmp35	%read{65,65} %write{63,63}
temp	float	$tmp36	%read{65,65} %write{64,64}
const	float	$const29	0.1		%read{67,69} %write{2147483647,-1}
temp	float	$tmp37	%read{68,68} %write{67,67}
temp	float	$tmp38	%read{71,71} %write{68,68}
temp	float	$tmp39	%read{70,70} %write{69,69}
temp	float	$tmp40	%read{71,71} %write{70,70}
temp	float	$tmp41	%read{81,81} %write{76,76}
temp	point	$tmp42	%read{76,76} %write{75,75}
temp	int	$tmp43	%read{78,78} %write{77,77}
temp	float	$tmp44	%read{80,80} %write{79,79}
temp	float	$tmp45	%read{79,79} %write{78,78}
temp	float	$tmp46	%read{81,81} %write{80,80}
temp	int	$tmp47	%read{82,82} %write{81,81}
temp	float	$tmp48	%read{87,87} %write{86,86}
const	string	$const30	"usimplex"		%read{86,86} %write{2147483647,-1}
temp	point	$tmp49	%read{86,86} %write{85,85}
temp	float	$tmp50	%read{88,88} %write{87,87}
const	color	$const31	1 0 0		%read{89,89} %write{2147483647,-1}
temp	int	$tmp51	%read{90,171} %write{91,171}
temp	float	$tmp52	%read{92,171} %write{92,171}
temp	float	$tmp53	%read{92,171} %write{92,171}
const	float	$const33	360		%read{94,94} %write{2147483647,-1}
const	string	$const34	"radians"		%read{95,95} %write{2147483647,-1}
const	float	$const35	3.1415927		%read{96,96} %write{2147483647,-1}
const	float	$const36	180		%read{96,96} %write{2147483647,-1}
temp	float	$tmp54	%read{92,171} %write{92,171}
temp	float	$tmp55	%read{92,171} %write{92,171}
temp	int	$tmp56	%read{92,171} %write{92,171}
temp	float	$tmp57	%read{92,171} %write{92,171}
temp	float	$tmp58	%read{92,171} %write{92,171}
const	string	$const37	"rotate"		%read{104,104} %write{2147483647,-1}
temp	vector	$tmp59	%read{92,171} %write{92,171}
temp	float	$tmp60	%read{92,171} %write{92,171}
temp	float	$tmp61	%read{92,171} %write{92,171}
temp	float	$tmp62	%read{92,171} %write{92,171}
temp	float	$tmp63	%read{92,171} %write{92,171}
temp	float	$tmp64	%read{92,171} %write{92,171}
temp	float	$tmp65	%read{92,171} %write{92,171}
temp	float	$tmp66	%read{92,171} %write{92,171}
temp	float	$tmp67	%read{92,171} %write{92,171}
temp	float	$tmp68	%read{92,171} %write{92,171}
temp	float	$tmp69	%read{92,171} %write{92,171}
temp	float	$tmp70	%read{92,171} %write{92,171}
temp	float	$tmp71	%read{92,171} %write{92,171}
temp	float	$tmp72	%read{92,171} %write{92,171}
temp	float	$tmp73	%read{92,171} %write{92,171}
temp	float	$tmp74	%read{92,171} %write{92,171}
temp	float	$tmp75	%read{92,171} %write{92,171}
temp	float	$tmp76	%read{92,171} %write{92,171}
temp	float	$tmp77	%read{92,171} %write{92,171}
temp	float	$tmp78	%read{92,171} %write{92,171}
temp	float	$tmp79	%read{92,171} %write{92,171}
temp	float	$tmp80	%read{92,171} %write{92,171}
temp	float	$tmp81	%read{92,171} %write{92,171}
temp	float	$tmp82	%read{92,171} %write{92,171}
temp	float	$tmp83	%read{92,171} %write{92,171}
temp	float	$tmp84	%read{92,171} %write{92,171}
temp	float	$tmp85	%read{92,171} %write{92,171}
temp	float	$tmp86	%read{92,171} %write{92,171}
temp	float	$tmp87	%read{92,171} %write{92,171}
temp	float	$tmp88	%read{92,171} %write{92,171}
temp	float	$tmp89	%read{92,171} %write{92,171}
temp	float	$tmp90	%read{92,171} %write{92,171}
temp	float	$tmp91	%read{92,171} %write{92,171}
temp	float	$tmp92	%read{92,171} %write{92,171}
temp	float	$tmp93	%read{92,171} %write{92,171}
temp	float	$tmp94	%read{92,171} %write{92,171}
temp	float	$tmp95	%read{92,171} %write{92,171}
temp	float	$tmp96	%read{92,171} %write{92,171}
temp	float	$tmp97	%read{92,171} %write{92,171}
temp	float	$tmp98	%read{92,171} %write{92,171}
temp	vector	$tmp99	%read{92,171} %write{92,171}
temp	vector	$tmp100	%read{92,171} %write{92,171}
temp	point	$tmp101	%read{92,171} %write{92,171}
temp	point	$tmp102	%read{92,171} %write{92,171}
temp	int	$tmp103	%read{92,171} %write{92,171}
temp	int	$tmp104	%read{92,171} %write{92,171}
temp	int	$tmp105	%read{92,171} %write{92,171}
temp	int	$tmp106	%read{92,171} %write{92,171}
code distanceBetweenRows
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:16
# 
	mul		distanceBetweenRows outerRadius $const2 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{16} %argrw{"wrr"}
code ___main___
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:26
#     float tt = mod(t * t_repeats, 1);   
	mul		$tmp1 s s_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{26} %argrw{"wrr"}
	functioncall	$const5 7 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# PERCOMP1 (log10)
	div		$tmp3 $tmp1 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $const4 $tmp2 	%argrw{"wrr"}
	sub		ss $tmp1 $tmp4 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:27
# 
	mul		$tmp5 t t_repeats 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{27} %argrw{"wrr"}
	functioncall	$const5 13 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# PERCOMP1 (log2)
	div		$tmp7 $tmp5 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const4 $tmp6 	%argrw{"wrr"}
	sub		tt $tmp5 $tmp8 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:30
#     dispOut = height * (float)noise("perlin", P * frequency);
	assign		resultRGB $const6 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{30} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:31
# 
	assign		$tmp11 frequency 	%line{31} %argrw{"wr"}
	mul		$tmp10 P $tmp11 	%argrw{"wrr"}
	noise		$tmp9 $const7 $tmp10 	%argrw{"wrr"}
	mul		dispOut height $tmp9 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:34
#     float stipSS = mod(s * stipRepeats, 1);
	assign		stipRepeats $const8 	%line{34} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:35
# 
	mul		$tmp12 s stipRepeats 	%line{35} %argrw{"wrr"}
	functioncall	$const5 25 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:136
# PERCOMP1 (exp)
	div		$tmp14 $tmp12 $const4 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp13 $tmp14 	%argrw{"wr"}
	mul		$tmp15 $const4 $tmp13 	%argrw{"wrr"}
	sub		stipSS $tmp12 $tmp15 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:37
#     float lineWidth = 0.001;
	assign		lineColour $const9 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{37} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:38
#     
	assign		lineWidth $const10 	%line{38} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:41
#     {
	lt		$tmp16 stipSS lineWidth 	%line{41} %argrw{"wrr"}
	if		$tmp16 30 30 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:43
#     }
	assign		lineColour $const6 	%line{43} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:47
#     color wave = color(sin(waveLength * t));
	mul		waveLength $const11 $const13 	%line{47} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:48
#     wave *= lineColour;
	mul		$tmp18 waveLength t 	%line{48} %argrw{"wrr"}
	sin		$tmp17 $tmp18 	%argrw{"wr"}
	assign		wave $tmp17 	%argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:49
# 
	mul		wave wave lineColour 	%line{49} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:51
# /// STIPPLING END
	compref		$tmp19 wave $const14 	%line{51} %argrw{"wrr"}
	div		$tmp20 $tmp19 $const16 	%argrw{"wrr"}
	add		dispOut dispOut $tmp20 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:62
# 
	mul		$tmp21 s_repeats s 	%line{62} %argrw{"wrr"}
	mul		$tmp22 t_repeats t 	%argrw{"wrr"}
	noise		circleSeed $const17 $tmp21 $tmp22 	%argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:64
#     {
	lt		$tmp23 circleSeed $const18 	%line{64} %argrw{"wrr"}
	if		$tmp23 44 44 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:66
#     }
	add		circleSeed circleSeed $const18 	%line{66} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:69
#     float b = circleSeed * 44;
	mul		a circleSeed $const20 	%line{69} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:70
#     float c = circleSeed * 36;
	mul		b circleSeed $const22 	%line{70} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:71
#     point circlesPerRing = point((int)a, (int)b, (int)c);
	mul		c circleSeed $const24 	%line{71} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:72
# 
	assign		$tmp24 a 	%line{72} %argrw{"wr"}
	assign		$tmp25 $tmp24 	%argrw{"wr"}
	assign		$tmp26 b 	%argrw{"wr"}
	assign		$tmp27 $tmp26 	%argrw{"wr"}
	assign		$tmp28 c 	%argrw{"wr"}
	assign		$tmp29 $tmp28 	%argrw{"wr"}
	point		circlesPerRing $tmp25 $tmp27 $tmp29 	%argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:74
#     float t_centre = 0.5;
	assign		s_centre $const18 	%line{74} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:75
#     float radiusOffset = (float)noise("cell", s_repeats * s, t_repeats * t) * 0.2;
	assign		t_centre $const18 	%line{75} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:76
#     float circleSize = (15 * outerRadius) + radiusOffset;
	mul		$tmp31 s_repeats s 	%line{76} %argrw{"wrr"}
	mul		$tmp32 t_repeats t 	%argrw{"wrr"}
	noise		$tmp30 $const17 $tmp31 $tmp32 	%argrw{"wrrr"}
	mul		radiusOffset $tmp30 $const25 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:77
#     point stPoint = point(ss, tt, 0);
	mul		$tmp33 $const27 outerRadius 	%line{77} %argrw{"wrr"}
	add		circleSize $tmp33 radiusOffset 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:78
#     point rotPoint;
	point		stPoint ss tt $const28 	%line{78} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:84
# 
	mul		$tmp35 s_repeats s 	%line{84} %argrw{"wrr"}
	mul		$tmp36 t_repeats t 	%argrw{"wrr"}
	noise		$tmp34 $const17 $tmp35 $tmp36 	%argrw{"wrrr"}
	sub		offsetSeed $tmp34 $const18 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:87
#     point axisPoint = point(s_centre, t_centre, 1);
	mul		$tmp37 offsetSeed $const29 	%line{87} %argrw{"wrr"}
	sub		$tmp38 s_centre $tmp37 	%argrw{"wrr"}
	mul		$tmp39 offsetSeed $const29 	%argrw{"wrr"}
	sub		$tmp40 t_centre $tmp39 	%argrw{"wrr"}
	point		centrePoint $tmp38 $tmp40 $const28 	%argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:88
# 
	point		axisPoint s_centre t_centre $const4 	%line{88} %argrw{"wrrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:91
#     float tOffset = t_centre;
	sub		sOffset s_centre circleSize 	%line{91} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:92
# 
	assign		tOffset t_centre 	%line{92} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:94
#     {
	point		$tmp42 ss tt $const28 	%line{94} %argrw{"wrrr"}
	distance	$tmp41 centrePoint $tmp42 	%argrw{"wrr"}
	sub		$tmp43 rings $const3 	%argrw{"wrr"}
	assign		$tmp45 $tmp43 	%argrw{"wr"}
	mul		$tmp44 $tmp45 distanceBetweenRows 	%argrw{"wrr"}
	add		$tmp46 circleSize $tmp44 	%argrw{"wrr"}
	gt		$tmp47 $tmp41 $tmp46 	%argrw{"wrr"}
	if		$tmp47 90 172 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:97
#         float simFreq = 5.0;
	assign		___326_simHeight $const18 	%line{97} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:98
#         dispOut -= simHeight * (float)noise("usimplex", P * simFreq);
	assign		___326_simFreq $const2 	%line{98} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:99
#         resultRGB = color(1.0, 0.0, 0.0);
	mul		$tmp49 P ___326_simFreq 	%line{99} %argrw{"wrr"}
	noise		$tmp48 $const30 $tmp49 	%argrw{"wrr"}
	mul		$tmp50 ___326_simHeight $tmp48 	%argrw{"wrr"}
	sub		dispOut dispOut $tmp50 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:100
#     }
	assign		resultRGB $const31 	%line{100} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:104
#         {
	for		$tmp51 92 93 171 172 	%line{104} %argrw{"r"}
	assign		___328_i $const14 	%argrw{"wr"}
	lt		$tmp51 ___328_i rings 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:106
#             for (int j = 0; j < circlesPerRing[i]; ++j)
	compref		$tmp52 circlesPerRing ___328_i 	%line{106} %argrw{"wrr"}
	div		$tmp53 $const33 $tmp52 	%argrw{"wrr"}
	functioncall	$const34 98 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp54 $const35 $const36 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___329_angle $tmp53 $tmp54 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:107
#     int frequency = 5,
	for		$tmp56 100 102 169 170 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{107} %argrw{"r"}
	assign		___330_j $const14 	%argrw{"wr"}
	compref		$tmp55 circlesPerRing ___328_i 	%argrw{"wrr"}
	lt		$tmp56 ___330_j $tmp55 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:110
#     output float dispOut = 0)
	assign		$tmp58 ___330_j 	%line{110} %argrw{"wr"}
	mul		$tmp57 $tmp58 ___329_angle 	%argrw{"wrr"}
	functioncall	$const37 155 	%argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:265
# color  mix (color  x, color  y, float  a) { return x*(1-a) + y*a; }
	sub		$tmp59 axisPoint centrePoint 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h"} %line{265} %argrw{"wrr"}
	normalize	___252_axis $tmp59 	%argrw{"wr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:267
# #else
	sincos		$tmp57 ___252_sinang ___252_cosang 	%line{267} %argrw{"rww"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:268
# normal mix (normal x, normal y, normal a) BUILTIN;
	sub		___252_cosang1 $const4 ___252_cosang 	%line{268} %argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:269
# normal mix (normal x, normal y, float  a) BUILTIN;
	compref		___252_x ___252_axis $const14 	%line{269} %argrw{"wrr"}
	compref		___252_y ___252_axis $const3 	%argrw{"wrr"}
	compref		___252_z ___252_axis $const8 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:270
# vector mix (vector x, vector y, vector a) BUILTIN;
	mul		$tmp60 ___252_x ___252_x 	%line{270} %argrw{"wrr"}
	mul		$tmp61 ___252_x ___252_x 	%argrw{"wrr"}
	sub		$tmp62 $const4 $tmp61 	%argrw{"wrr"}
	mul		$tmp63 $tmp62 ___252_cosang 	%argrw{"wrr"}
	add		$tmp64 $tmp60 $tmp63 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:271
# vector mix (vector x, vector y, float  a) BUILTIN;
	mul		$tmp65 ___252_x ___252_y 	%line{271} %argrw{"wrr"}
	mul		$tmp66 $tmp65 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp67 ___252_z ___252_sinang 	%argrw{"wrr"}
	add		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:272
# point  mix (point  x, point  y, point  a) BUILTIN;
	mul		$tmp69 ___252_x ___252_z 	%line{272} %argrw{"wrr"}
	mul		$tmp70 $tmp69 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp71 ___252_y ___252_sinang 	%argrw{"wrr"}
	sub		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:274
# color  mix (color  x, color  y, color  a) BUILTIN;
	mul		$tmp73 ___252_x ___252_y 	%line{274} %argrw{"wrr"}
	mul		$tmp74 $tmp73 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp75 ___252_z ___252_sinang 	%argrw{"wrr"}
	sub		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:275
# color  mix (color  x, color  y, float  a) BUILTIN;
	mul		$tmp77 ___252_y ___252_y 	%line{275} %argrw{"wrr"}
	mul		$tmp78 ___252_y ___252_y 	%argrw{"wrr"}
	sub		$tmp79 $const4 $tmp78 	%argrw{"wrr"}
	mul		$tmp80 $tmp79 ___252_cosang 	%argrw{"wrr"}
	add		$tmp81 $tmp77 $tmp80 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:276
# float  mix (float  x, float  y, float  a) BUILTIN;
	mul		$tmp82 ___252_y ___252_z 	%line{276} %argrw{"wrr"}
	mul		$tmp83 $tmp82 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp84 ___252_x ___252_sinang 	%argrw{"wrr"}
	add		$tmp85 $tmp83 $tmp84 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:278
# normal select (normal x, normal y, normal cond) BUILTIN;
	mul		$tmp86 ___252_x ___252_z 	%line{278} %argrw{"wrr"}
	mul		$tmp87 $tmp86 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp88 ___252_y ___252_sinang 	%argrw{"wrr"}
	add		$tmp89 $tmp87 $tmp88 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:279
# vector select (vector x, vector y, vector cond) BUILTIN;
	mul		$tmp90 ___252_y ___252_z 	%line{279} %argrw{"wrr"}
	mul		$tmp91 $tmp90 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp92 ___252_x ___252_sinang 	%argrw{"wrr"}
	sub		$tmp93 $tmp91 $tmp92 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:280
# point  select (point  x, point  y, point  cond) BUILTIN;
	mul		$tmp94 ___252_z ___252_z 	%line{280} %argrw{"wrr"}
	mul		$tmp95 ___252_z ___252_z 	%argrw{"wrr"}
	sub		$tmp96 $const4 $tmp95 	%argrw{"wrr"}
	mul		$tmp97 $tmp96 ___252_cosang 	%argrw{"wrr"}
	add		$tmp98 $tmp94 $tmp97 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:282
# float  select (float  x, float  y, float  cond) BUILTIN;
	matrix		___252_M $tmp64 $tmp68 $tmp72 $const28 $tmp76 $tmp81 $tmp85 $const28 $tmp89 $tmp93 $tmp98 $const28 $const28 $const28 $const28 $const4 	%line{282} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.5\\lib\\osl\\include\\stdosl.h:283
# normal select (normal x, normal y, float cond) BUILTIN;
	sub		$tmp100 stPoint centrePoint 	%line{283} %argrw{"wrr"}
	transformv	$tmp99 ___252_M $tmp100 	%argrw{"wrr"}
	add		rotPoint $tmp99 centrePoint 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:111
#                 rotT = rotPoint[1];
	compref		rotS rotPoint $const14 	%filename{"C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl"} %line{111} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:112
# 
	compref		rotT rotPoint $const3 	%line{112} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:115
#                 if (dist <= outerRadius && dist >= innerRadius)
	point		$tmp101 sOffset tOffset $const28 	%line{115} %argrw{"wrrr"}
	point		$tmp102 rotS rotT $const28 	%argrw{"wrrr"}
	distance	___331_dist $tmp101 $tmp102 	%argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:116
#                 {
	le		$tmp103 ___331_dist outerRadius 	%line{116} %argrw{"wrr"}
	neq		$tmp104 $tmp103 $const14 	%argrw{"wrr"}
	if		$tmp104 166 166 	%argrw{"r"}
	ge		$tmp105 ___331_dist innerRadius 	%argrw{"wrr"}
	neq		$tmp106 $tmp105 $const14 	%argrw{"wrr"}
	assign		$tmp104 $tmp106 	%argrw{"wr"}
	if		$tmp104 169 169 	%argrw{"r"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:118
#                     resultRGB = color(0.0, 0.0, 0.0);
	sub		dispOut dispOut ___331_dist 	%line{118} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:119
#                 }
	assign		resultRGB $const9 	%line{119} %argrw{"wr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:107
#             {
	add		___330_j ___330_j $const3 	%line{107} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:122
#         }
	sub		sOffset sOffset distanceBetweenRows 	%line{122} %argrw{"wrr"}
# C:\\Users\\baile\\Desktop\\rman-toiletroll\\shaders/testing.osl:104
#         {
	add		___328_i ___328_i $const3 	%line{104} %argrw{"wrr"}
	end
